name: 'Terraform AWS Workflow'

on:
  push:
    branches:
      - main
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - '.github/workflows/terraform.yml'
  pull_request:
    branches:
      - main
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - '.github/workflows/terraform.yml'
  workflow_dispatch:
    inputs:
      working_directory:
        description: 'Terraform working directory'
        required: true
        type: string

permissions:
  contents: read
  pull-requests: write

env:
  AWS_REGION: 'us-west-2'  # Êõ¥Êîπ‰∏∫‰Ω†ÁöÑÁõÆÊ†á AWS Âå∫Âüü

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # ‰ΩøÁî® OIDC ËøõË°å AWS ËÆ§ËØÅ
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ${{ github.event.inputs.working_directory || '.' }}
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ github.event.inputs.working_directory || '.' }}

      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ${{ github.event.inputs.working_directory || '.' }}

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color -out=tfplan
          terraform show -json tfplan > plan.json
          echo 'PLAN<<EOF' >> $GITHUB_OUTPUT
          terraform show -no-color tfplan >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
        working-directory: ${{ github.event.inputs.working_directory || '.' }}
        continue-on-error: true

      - name: Generate Plan HTML
        id: plan-html
        if: github.event_name == 'pull_request'
        run: |
          echo 'PLAN_HTML<<EOF' >> $GITHUB_OUTPUT
          echo '<table>' >> $GITHUB_OUTPUT
          echo '<tr><th>Resource</th><th>Action</th><th>Type</th></tr>' >> $GITHUB_OUTPUT
          
          jq -r '.resource_changes[] | "<tr><td>" + .address + "</td><td>" + (.change.actions | join(", ")) + "</td><td>" + .type + "</td></tr>"' plan.json >> $GITHUB_OUTPUT
          
          echo '</table>' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
        working-directory: ${{ github.event.inputs.working_directory || '.' }}

      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.PLAN }}"
          PLAN_HTML: "${{ steps.plan-html.outputs.PLAN_HTML }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Resource Changes</summary>

            ${process.env.PLAN_HTML}
            
            </details>

            <details><summary>Show Full Plan</summary>

            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`

            </details>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: ${{ github.event.inputs.working_directory || '.' }}
